// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace SIGT.Entities
{
    public partial class SigtContext : DbContext
    {
        public SigtContext()
        {
        }

        public SigtContext(DbContextOptions<SigtContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Cv> Cv { get; set; }
        public virtual DbSet<Education> Education { get; set; }
        public virtual DbSet<Experience> Experience { get; set; }
        public virtual DbSet<Interest> Interest { get; set; }
        public virtual DbSet<Language> Language { get; set; }
        public virtual DbSet<Skills> Skills { get; set; }
        public virtual DbSet<SkillsExperience> SkillsExperience { get; set; }
        public virtual DbSet<Tasks> Tasks { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Cv>(entity =>
            {
                entity.ToTable("CV");

                entity.Property(e => e.Adress).HasMaxLength(50);

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.FullName).HasMaxLength(50);

                entity.Property(e => e.Linkedin).HasMaxLength(50);

                entity.Property(e => e.Phone).HasMaxLength(50);

                entity.Property(e => e.Photo).HasMaxLength(50);

                entity.Property(e => e.Title).HasMaxLength(50);
            });

            modelBuilder.Entity<Education>(entity =>
            {
                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.CvId).HasColumnName("CV_Id");

                entity.Property(e => e.DateFrom)
                    .HasColumnType("date")
                    .HasColumnName("Date_From");

                entity.Property(e => e.DateTo)
                    .HasColumnType("date")
                    .HasColumnName("Date_To");

                entity.Property(e => e.Institute).HasMaxLength(50);

                entity.Property(e => e.Label).HasMaxLength(50);

                entity.HasOne(d => d.Cv)
                    .WithMany(p => p.Education)
                    .HasForeignKey(d => d.CvId)
                    .HasConstraintName("FK__Education__CV_Id__37A5467C");
            });

            modelBuilder.Entity<Experience>(entity =>
            {
                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.CvId).HasColumnName("CV_Id");

                entity.Property(e => e.DateFrom)
                    .HasColumnType("date")
                    .HasColumnName("Date_From");

                entity.Property(e => e.DateTo)
                    .HasColumnType("date")
                    .HasColumnName("Date_To");

                entity.HasOne(d => d.Cv)
                    .WithMany(p => p.Experience)
                    .HasForeignKey(d => d.CvId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Experienc__CV_Id__398D8EEE");
            });

            modelBuilder.Entity<Interest>(entity =>
            {
                entity.Property(e => e.CvId).HasColumnName("CV_Id");

                entity.Property(e => e.Label).HasMaxLength(50);

                entity.HasOne(d => d.Cv)
                    .WithMany(p => p.Interest)
                    .HasForeignKey(d => d.CvId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Interest__CV_Id__3A81B327");
            });

            modelBuilder.Entity<Language>(entity =>
            {
                entity.Property(e => e.CvId).HasColumnName("CV_Id");

                entity.Property(e => e.Label).HasMaxLength(50);

                entity.Property(e => e.Level)
                    .HasMaxLength(50)
                    .HasColumnName("level");

                entity.HasOne(d => d.Cv)
                    .WithMany(p => p.Language)
                    .HasForeignKey(d => d.CvId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Language__CV_Id__5CD6CB2B");
            });

            modelBuilder.Entity<Skills>(entity =>
            {
                entity.Property(e => e.CvId).HasColumnName("CV_Id");

                entity.Property(e => e.Label).HasMaxLength(50);

                entity.HasOne(d => d.Cv)
                    .WithMany(p => p.Skills)
                    .HasForeignKey(d => d.CvId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Skills__CV_Id__3B75D760");
            });

            modelBuilder.Entity<SkillsExperience>(entity =>
            {
                entity.ToTable("Skills_Experience");

                entity.Property(e => e.ExperienceId).HasColumnName("Experience_Id");

                entity.Property(e => e.SkillsId).HasColumnName("Skills_Id");

                entity.HasOne(d => d.Experience)
                    .WithMany(p => p.SkillsExperience)
                    .HasForeignKey(d => d.ExperienceId)
                    .HasConstraintName("FK__Skills_Ex__Exper__412EB0B6");

                entity.HasOne(d => d.Skills)
                    .WithMany(p => p.SkillsExperience)
                    .HasForeignKey(d => d.SkillsId)
                    .HasConstraintName("FK__Skills_Ex__Skill__4222D4EF");
            });

            modelBuilder.Entity<Tasks>(entity =>
            {
                entity.Property(e => e.ExperienceId).HasColumnName("Experience_Id");

                entity.HasOne(d => d.Experience)
                    .WithMany(p => p.Tasks)
                    .HasForeignKey(d => d.ExperienceId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Tasks__Experienc__5070F446");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}